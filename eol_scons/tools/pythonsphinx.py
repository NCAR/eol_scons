
def _sphinxhtml(env, build, source):
    """
    Run sphinx-build in the given source directory with output under
    target.  Creates two subdirectories under target: html and doctrees.
    This runs in the source directory so that paths in conf.py can be
    relative to that directory.  Also, there is no attempt to identify
    individual sources files and targets.  Identifying sources would
    require as a minimum scanning all the python sources files and all the
    rst files, and I don't know whether there is a way to identify the
    targets.  Instead, always run sphinx-build when requested as a target,
    since sphinx-build itself determines which sources have changed and
    which outputs need to be regenerated.
    """
    targets = env.Command(env.Dir(build), env.Dir(source),
                          "cd ${SOURCE} && "
                          "${SPHINXBUILD} -b html "
                          "-d ${TARGET.abspath}/doctrees ${ALLSPHINXOPTS} "
                          ". ${TARGET.abspath}/html")
    env.AlwaysBuild(targets)
    return env.Alias('html', targets)

def generate(env):
    "Tool to add pseudo-builders for sphinx documentation from python."
    # These mirror the Makefile generated by sphinx-quickstart
    env.SetDefault(SPHINXBUILD   = "sphinx-build")
    env.SetDefault(SPHINXOPTS    = "")
    env.SetDefault(SPHINXPAPEROPT = "-D latex_paper_size=letter")
    env.SetDefault(SPHINXALLOPTS  = "${SPHINXPAPEROPT} ${SPHINXOPTS}")
    env.AddMethod(_sphinxhtml, "SphinxHTML")

def exists(env):
    return env.Detect('sphinx-build')

